from flask_sqlalchemy import SQLAlchemy

db = SQLAlchemy()

def import_db_perfil(database):
    global db
    db = database

class Perfiles(db.Model):
    tablename = 'perfiles'

    idperfil = db.Column(db.Integer, primary_key=True)
    idusuario = db.Column(db.Integer, nullable=False)
    nombreperfil = db.Column(db.String(255), nullable=False)
    favoritosperfil = db.Column(db.ARRAY(db.Integer)) 

    def repr(self):
        return f'<Perfil: {self.idperfil}>'
    
    def to_dict(self):
        return {
            "idperfil": self.idperfil,
            "idusuario": self.idusuario,
            "nombreperfil": self.nombreperfil,
            "favoritos": self.favoritosperfil
        }


# class Perfil(Model):
#     """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

#     Do not edit the class manually.
#     """

#     def __init__(self, nombre_perfil=None, favoritos_perfil=None):  # noqa: E501
#         """Perfil - a model defined in OpenAPI

#         :param nombre_perfil: The nombre_perfil of this Perfil.  # noqa: E501
#         :type nombre_perfil: str
#         :param favoritos_perfil: The favoritos_perfil of this Perfil.  # noqa: E501
#         :type favoritos_perfil: List[int]
#         """
#         self.openapi_types = {
#             'nombre_perfil': str,
#             'favoritos_perfil': List[int]
#         }

#         self.attribute_map = {
#             'nombre_perfil': 'nombrePerfil',
#             'favoritos_perfil': 'favoritosPerfil'
#         }

#         self._nombre_perfil = nombre_perfil
#         self._favoritos_perfil = favoritos_perfil

#     @classmethod
#     def from_dict(cls, dikt) -> 'Perfil':
#         """Returns the dict as a model

#         :param dikt: A dict.
#         :type: dict
#         :return: The Perfil of this Perfil.  # noqa: E501
#         :rtype: Perfil
#         """
#         return util.deserialize_model(dikt, cls)

#     @property
#     def nombre_perfil(self) -> str:
#         """Gets the nombre_perfil of this Perfil.

#         Nombre con el cual se identificará el perfil. Este nombre no podrá ser el mismo para dos perfiles pertenecientes a la misma cuenta  # noqa: E501

#         :return: The nombre_perfil of this Perfil.
#         :rtype: str
#         """
#         return self._nombre_perfil

#     @nombre_perfil.setter
#     def nombre_perfil(self, nombre_perfil: str):
#         """Sets the nombre_perfil of this Perfil.

#         Nombre con el cual se identificará el perfil. Este nombre no podrá ser el mismo para dos perfiles pertenecientes a la misma cuenta  # noqa: E501

#         :param nombre_perfil: The nombre_perfil of this Perfil.
#         :type nombre_perfil: str
#         """

#         self._nombre_perfil = nombre_perfil

#     @property
#     def favoritos_perfil(self) -> List[int]:
#         """Gets the favoritos_perfil of this Perfil.

#         Representa la lista de contenidos multimedia de la aplicacion que la persona que utiliza el perfil ha marcado como favoritos. Este array almacenará únicamente el identificador de dichos contenidos con el fin de simplificar y facilitar la implementación de la aplicación.  # noqa: E501

#         :return: The favoritos_perfil of this Perfil.
#         :rtype: List[int]
#         """
#         return self._favoritos_perfil

#     @favoritos_perfil.setter
#     def favoritos_perfil(self, favoritos_perfil: List[int]):
#         """Sets the favoritos_perfil of this Perfil.

#         Representa la lista de contenidos multimedia de la aplicacion que la persona que utiliza el perfil ha marcado como favoritos. Este array almacenará únicamente el identificador de dichos contenidos con el fin de simplificar y facilitar la implementación de la aplicación.  # noqa: E501

#         :param favoritos_perfil: The favoritos_perfil of this Perfil.
#         :type favoritos_perfil: List[int]
#         """

#         self._favoritos_perfil = favoritos_perfil
